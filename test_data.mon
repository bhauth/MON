
root_item = ["nested", ["bracket", ["array"]]]

'single quotes' = "allow for spaces in keys"

# alpha
"A"

# beta
bools = [true, false]
'null' = null

#" Text Block
You can freely use
symbols like " and = in this text.

## nested text
can go in these too.

#/ comment block

## Text here is ignored.
Until hitting a lower-level header.

# gamma
g = "is for gamma"

# gamma.deeply.nested.items
multi_line_string = "this...
is...
nested."

# epsilon

## array.[]
a = "building"
b = "an"

## array.[]
c = "array"
d = "up"

# zeta
// This is a comment.
// Commas produce nested values.
- 0
- "put a 1 here"
- 2
  , 2.2
- 3
  , 3.3

# zeta.0
"replaced zero"

# zeta.[put a 1 here]
"a 1"

# people
##/ templates are not output
##= employee_template
role = "employee"

// ditto copies above
##= bob
status = "active"

##= joe

#= people_copy

# code blocks

##; logging
console.log("Send a message in a bottle.");

## x
10

##; 2x
return this.x * 2;

##; using root
return `Bob's status is ${root.people.bob.status}.`;

#: some_tags

##: squared
this.x2 = this.x ** 2;

##: cubed
this.x3 = this.x ** 3;

# numbers

## square_me : squared
x = 10

#: funNumbers
## squares : myType
### * : squared
## cubes.[] : cubed

# squared_numbers : funNumbers

## squares
### s1
x = 6
### s2
x = 5

# cubed_numbers : funNumbers

## cubes
- x = 4
- x = 3

## cubes.[]
x = 2
## cubes.[]
x = 1
